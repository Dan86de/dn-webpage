---
import Layout from "../layouts/Layout.astro";
import { Image } from "astro:assets";
import avatar from "../images/avatar_1.webp";
import signature from "../images/signature.webp";
import signatureDark from "../images/signature-dark.webp";
import Sidebar from "../components/Sidebar.astro";
import Stack from "../components/Stack.astro";
import LazyThemedImage from "../components/LazyThemedImage.astro";
---

<Layout>
  <div class="px-(--inline-padding) pb-[100vh]">
    <Sidebar
      class="mx-auto max-w-4xl laptop:[--sidebar-width:var(--container-2xl)] laptop:[--sidebar-content-min:100px] laptop:[--sidebar-gap:4rem]"
    >
      <!-- CONTENT -->
      <div>
        <h1
          id="introduction"
          class="bg-brand-gradient bg-clip-text text-transparent font-medium pb-12 mt-10"
        >
          Developer.<br /> Father. Creator.
        </h1>
        <p class="pb-6">
          From dreaming of becoming a programmer to making it a reality in 2020,
          I'm now sharing my journey through teaching and creating. I help
          others transition into tech while building useful things along the
          way.
        </p>
        <Sidebar sidebarWidth="312px" class="mb-10 tablet:[--sidebar-gap:1rem]">
          <div>
            <Image
              loading="eager"
              src={avatar}
              alt="Daniel Noworyta"
              class="aspect-square w-full mx-auto rounded-lg block"
            />
          </div>
          <Stack
            space="calc(var(--spacing) * 4)"
            class="[@media(min-width:702px)]:border-t border-orange-500 text-pretty [@media(min-width:702px)]:text-grey-800 italic [@media(min-width:702px)]:pt-4"
          >
            <p>
              Hey, I'm Daniel Noworyta. For most of my life, I pushed aside my
              dream of becoming a programmer and doing what I love. In 2020, I
              fulfilled that dream and became a programmer.
            </p>
            <p>
              I have a channel on YouTube where I share my insights and
              experiences in learning programming, transitioning to new fields,
              and advancing my career in IT.
            </p>
            <p
              class="[@media(min-width:702px)]:border-b border-orange-500 [@media(min-width:702px)]:pb-4"
            >
              I love dark mode and side projects. When I'm not working, I like
              playing football, reading books, and eating pizza.
            </p>
          </Stack>
        </Sidebar>
        <h3 id="my-story" class="font-medium max-w-[675px] pb-6">My Story</h3>
        <Stack class="pb-8">
          <p>
            I used to live a life that, on the surface, looked successful but
            felt deeply unfulfilling. As a Class A surface modeler in the
            automotive industry, I spent my days working long hours in front of
            a computer, creating 3D models in specialized software. My routine
            was grueling: waking up at 6:00 AM, working from 8:00 AM to 5:00 PM,
            and frequently traveling to production facilities in places like
            Detroit, Turin, Sweden, and Germany.
          </p>
          <p>
            The constant delegations kept me away from home, which became
            unbearable when I met my wife and dreamed of starting a family. I
            felt trapped, knowing I'd hit the ceiling of my career with no room
            to grow or earn more, and my true passion—creating web pages and
            solving problems through coding—was just a distant dream I lacked
            the courage to pursue.
          </p>
          <p>
            My mindset back then was a mix of hope and frustration. I believed I
            could change my life, inspired by YouTube creators and tech blogs,
            but I wasn't sure if I could pull it off. I felt excited about the
            possibility of becoming a software developer, yet the demands of my
            job and the fear of failure held me back.
          </p>
        </Stack>
        <h4 id="rock-bottom" class="font-medium max-w-[675px] pb-6">
          My "rock bottom" moment
        </h4>
        <Stack class="pb-8">
          <p>
            The lowest point came when my son was born, and my company sent me
            to Detroit for a six-month project. Missing those precious early
            months with my newborn son was heartbreaking—it was my rock bottom.
            I knew I couldn't keep living a life that kept me away from my
            family and my true calling. That moment, coupled with my desire to
            return to Poland and raise my son there, was the spark that pushed
            me to act.
          </p>
          <p>
            Determined to change my life, I committed to learning how to code. I
            started with online courses from Udemy and YouTube, focusing on
            HTML, CSS, and JavaScript. To make progress, I reshaped my routine,
            waking up at 5:30 AM—or even 4:30 AM—to study before my 8-to-5 job,
            then coding again in the evenings. It wasn't easy.
          </p>
          <p>
            As a self-taught developer, I faced imposter syndrome and struggled
            to find well-structured resources. I often redid courses multiple
            times to solidify my knowledge, and without a mentor, I had to rely
            on sheer persistence. But my dream of working from home, building a
            SaaS product, and achieving financial independence kept me going.
            After two and a half years of relentless effort, I landed my first
            job as a full-stack developer in the TypeScript ecosystem.
          </p>
        </Stack>
        <h4 id="today" class="font-medium max-w-[675px] pb-6">
          What I'm doing today
        </h4>
        <Stack class="mb-10">
          <p>
            Today, I work remotely for a German company, building applications
            for installers of heat pumps and gas boilers using React and React
            Native. With six years of professional coding experience, I earn a
            good living and have the freedom to be with my family in Poland. My
            life has transformed—I'm no longer tethered to constant travel or a
            career ceiling.
          </p>
          <p>
            I also run a YouTube channel with over 5,500 subscribers, where I
            share my coding journey and inspire others, recently switching to
            English to reach a broader audience. The key lesson I've learned is
            that with enough will and dedication, anyone can make a significant
            life change, no matter their circumstances. Two and a half years may
            seem long, but it's a small price to pay for a lifetime of
            fulfillment.
          </p>
          <p>
            This journey fuels my current mission: to show others that they,
            too, can transform their lives by pursuing their passions,
            especially in the IT industry. In an era where AI is changing the
            landscape, I want to inspire people to embrace challenges, learn to
            code, and build careers that offer freedom and impact. My story is
            proof that with persistence, anyone can turn their dreams into
            reality.
          </p>
        </Stack>
        <LazyThemedImage
          lightSrc={signature}
          darkSrc={signatureDark}
          width={300}
          alt="Signature"
          class="w-[200px] ml-auto"
        />
      </div>
      <!-- TOC -->
      <div class="hidden desktop:block mt-49 relative">
        <div class="sticky top-20">
          <p class="caption pb-4">Table of contents</p>
          <ul id="toc-list" class="flex flex-col gap-1">
            <li
              data-section="introduction"
              class="toc-item footnote cursor-pointer flex gap-2 items-center -ml-4 transition-colors"
            >
              <span
                class="toc-indicator block size-2 bg-orange-500 rounded-full opacity-0 transition-opacity"
              ></span><a href="#introduction">Introduction</a>
            </li>
            <li
              data-section="my-story"
              class="toc-item footnote cursor-pointer flex gap-2 items-center -ml-4 transition-colors"
            >
              <span
                class="toc-indicator block size-2 bg-orange-500 rounded-full opacity-0 transition-opacity"
              ></span><a href="#my-story">My Story</a>
            </li>
            <li
              data-section="rock-bottom"
              class="toc-item footnote cursor-pointer flex gap-2 items-center -ml-4 transition-colors"
            >
              <span
                class="toc-indicator block size-2 bg-orange-500 rounded-full opacity-0 transition-opacity"
              ></span><a href="#rock-bottom">My "rock bottom" moment</a>
            </li>
            <li
              data-section="today"
              class="toc-item footnote cursor-pointer flex gap-2 items-center -ml-4 transition-colors"
            >
              <span
                class="toc-indicator block size-2 bg-orange-500 rounded-full opacity-0 transition-opacity"
              ></span><a href="#today">What I'm doing today</a>
            </li>
          </ul>
        </div>
      </div>
    </Sidebar>
  </div>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll("h1[id], h3[id], h4[id]");
    const tocItems = document.querySelectorAll(".toc-item");

    // Function to update active TOC item
    function updateActiveSection() {
      const scrollPosition = window.scrollY + 100; // Offset for better UX

      let activeSection: string | null = null;

      // Find which section is currently in view
      sections.forEach((section) => {
        const rect = section.getBoundingClientRect();
        const sectionTop = rect.top + window.scrollY;

        if (scrollPosition >= sectionTop) {
          activeSection = section.id;
        }
      });

      // Update TOC styling
      tocItems.forEach((item) => {
        const sectionId = item.getAttribute("data-section");
        const indicator = item.querySelector(".toc-indicator");
        const link = item.querySelector("a");

        if (sectionId === activeSection) {
          // Active state
          item.classList.add("text-orange-500");
          item.classList.remove("text-current");
          if (indicator) {
            indicator.classList.remove("opacity-0");
            indicator.classList.add("opacity-100");
          }
        } else {
          // Inactive state
          item.classList.remove("text-orange-500");
          item.classList.add("text-current");
          if (indicator) {
            indicator.classList.add("opacity-0");
            indicator.classList.remove("opacity-100");
          }
        }
      });
    }

    // Add smooth scrolling for TOC links
    tocItems.forEach((item) => {
      const link = item.querySelector("a");
      if (link) {
        link.addEventListener("click", (e) => {
          e.preventDefault();
          const targetId = link.getAttribute("href")?.substring(1);
          const targetSection = document.getElementById(targetId ?? "");

          if (targetSection) {
            const offset = 80; // Adjust this value based on your header height
            const targetPosition =
              targetSection.getBoundingClientRect().top +
              window.scrollY -
              offset;

            window.scrollTo({
              top: targetPosition,
              behavior: "smooth",
            });
          }
        });
      }
    });

    // Use Intersection Observer for better performance
    const observerOptions = {
      rootMargin: "-20% 0% -70% 0%",
      threshold: 0,
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const sectionId = entry.target.id;

          // Update TOC styling
          tocItems.forEach((item) => {
            const itemSectionId = item.getAttribute("data-section");
            const indicator = item.querySelector(".toc-indicator");

            if (itemSectionId === sectionId) {
              item.classList.add("text-orange-500");
              item.classList.remove("text-current");
              if (indicator) {
                indicator.classList.remove("opacity-0");
                indicator.classList.add("opacity-100");
              }
            } else {
              item.classList.remove("text-orange-500");
              item.classList.add("text-current");
              if (indicator) {
                indicator.classList.add("opacity-0");
                indicator.classList.remove("opacity-100");
              }
            }
          });
        }
      });
    }, observerOptions);

    // Observe all sections
    sections.forEach((section) => {
      observer.observe(section);
    });

    // Initial check
    updateActiveSection();

    // Fallback scroll listener for edge cases
    let scrollTimeout: NodeJS.Timeout;
    window.addEventListener("scroll", () => {
      clearTimeout(scrollTimeout);
      scrollTimeout = setTimeout(updateActiveSection, 10);
    });
  });
</script>
